# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}


http {
    # what times to include
    include       /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    server {
        # listen on port 80
        listen 80;
        # save logs here
        access_log /var/log/nginx/access.log compression;

        root   /usr/share/nginx/html;
        index  index.html index.htm;

        location ~* ^.+\.js$ {
            LOCATION_SUB_FILTER
            sub_filter_once off;
            sub_filter_types *;
        }

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }

    server {
      listen 8081;

      location /engine {
        proxy_pass http://engine;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
      }
    }

    server {
      listen 8545;

      location /ethereum {
        proxy_pass http://ethereum;
        proxy_set_header Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
      }
    }

    server {
      listen 8546;

      location /ethereum/ws {
        proxy_pass http://ethereum;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
      }
    }
}


# server {
#   listen 8080;
#   root   /usr/share/nginx/html;

#   location / {
#     root   /usr/share/nginx/html;
#     index  index.html index.htm;
#     try_files $uri $uri/ /index.html;
#   }

#   # Media: images, icons, video, audio, HTC
#   location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
#     expires 1M;
#     access_log off;
#     add_header Cache-Control "public";
#   }

#   # Javascript and CSS files
#   location ~* \.(?:css|js)$ {
#       try_files $uri =404;
#       expires 1y;
#       access_log off;
#       add_header Cache-Control "public";
#   }

#   # Any route containing a file extension (e.g. /devicesfile.js)
#   location ~ ^.+\..+$ {
#       try_files $uri =404;
#   }

#   error_page   500 502 503 504  /50x.html;
#   location = /50x.html {
#     root   /usr/share/nginx/html;
#   }
# }